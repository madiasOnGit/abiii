
Description: Template to create source php Web App demo
Parameters: 
  DBUser: 
    Type: String
  DBPass:
    Type: String

Resources:
  onPremVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.20.0.0/16
      Tags:
        - Key: Name
          Value: !Join [_, [!Ref 'AWS::StackName', VPC]]
  
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref onPremVPC
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      CidrBlock: 10.20.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join [_, [!Ref 'AWS::StackName', PublicSubnet1]]
  
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref onPremVPC
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      CidrBlock: 10.20.4.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join [_, [!Ref 'AWS::StackName', PublicSubnet2]]
  
  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      VpcId: !Ref onPremVPC
      CidrBlock: 10.20.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join [_, [!Ref 'AWS::StackName', PrivateSubnet]]
 
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join [_, [!Ref 'AWS::StackName', IGW]]
  
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref onPremVPC
      InternetGatewayId: !Ref InternetGateway
  
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref onPremVPC

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  NatGateway:
    Type: "AWS::EC2::NatGateway"
    DependsOn: NatPublicIP
    Properties:
      AllocationId: !GetAtt NatPublicIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  NatPublicIP:
    Type: "AWS::EC2::EIP"
    DependsOn: onPremVPC
    Properties:
      Domain: vpc

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref onPremVPC
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  

  ## App layer (EC2 instance, ALB, Security groups, EC2 SSM Role) ##
  SecurityGroupHTTPALB:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: HTTPSgALB
      GroupDescription: HTTP(S)
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref onPremVPC
      Tags:
        - Key: Name
          Value: HTTPSgALB
  WebSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: WebSg
      GroupDescription: HTTP(S)
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: !Ref SecurityGroupHTTPALB
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          SourceSecurityGroupId: !Ref SecurityGroupHTTPALB
      VpcId: !Ref onPremVPC
      Tags:
        - Key: Name
          Value: WebSg
  DBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: DBSg
      GroupDescription: HTTP(S)
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !Ref WebSecurityGroup
      VpcId: !Ref onPremVPC
      Tags:
        - Key: Name
          Value: DBSg
  EC2DB:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-014ce76919b528bff
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet
      KeyName: devKeyIreland
      SecurityGroupIds:
        - !Ref DBSecurityGroup
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo yum update -y
            wget https://downloads.mysql.com/archives/get/p/23/file/MySQL-server-5.5.55-1.el7.x86_64.rpm
            wget https://downloads.mysql.com/archives/get/p/23/file/MySQL-client-5.5.55-1.el7.x86_64.rpm


            sudo yum remove mariadb-libs -y

            sudo yum localinstall MySQL-server-5.5.55-1.el7.x86_64.rpm -y
            sudo yum localinstall MySQL-client-5.5.55-1.el7.x86_64.rpm -y

            sudo service mysql start 

            mysqladmin -u root password ${DBPass}
            sudo mysql -u root "-p${DBPass}" -e "CREATE DATABASE OctankDB;Use OctankDB;create table product (id int auto_increment primary key,name text,price text,descript text);"
            
            sudo mysql -u root "-p${DBPass}" -e  "Use OctankDB;insert into product (name, price, descript) select 'Eosphorite', concat('$', floor(rand()*100)), 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet numquam aspernatur! ';"
            sudo mysql -u root "-p${DBPass}" -e  "Use OctankDB;insert into product (name, price, descript) select 'Epidote', concat('$', floor(rand()*100)), 'onsectetur adipisicing elit. Amet numquam aspernatur! Lorem ipsum dolor sit amet.';"
            sudo mysql -u root "-p${DBPass}" -e  "Use OctankDB;insert into product (name, price, descript) select 'Euclase', concat('$', floor(rand()*100)), 'Amet numquam aspernatur! Lorem ipsum dolor sit amet.';"
            sudo mysql -u root "-p${DBPass}" -e  "Use OctankDB;insert into product (name, price, descript) select 'Eucryptite', concat('$', floor(rand()*100)), 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.';"
            sudo mysql -u root "-p${DBPass}" -e  "Use OctankDB;insert into product (name, price, descript) select 'Eudialyte', concat('$', floor(rand()*100)), 'Amet numquam aspernatur! Lorem ipsum dolor sit amet.';"
            sudo mysql -u root "-p${DBPass}" -e  "Use OctankDB;insert into product (name, price, descript) select 'Rubellite', concat('$', floor(rand()*100)), 'elit. Amet numquam aspernatur! Lorem ipsum dolor sit amet.';"
      
            sudo mysql -u root "-p${DBPass}" -e "CREATE USER '${DBUser}'@'%' IDENTIFIED BY '${DBPass}'"
            sudo mysql -u root "-p${DBPass}" -e "GRANT ALL PRIVILEGES ON *.* TO '${DBUser}'@'%'"
            sudo mysql -u root "-p${DBPass}" -e "FLUSH PRIVILEGES"
      Tags:
        - Key: Name
          Value: DBInstance
  EC2App1:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-014ce76919b528bff
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet
      KeyName: devKeyIreland
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            # Install dependecies
            sudo yum update -y
            sudo yum install php php-mysql git -y

            echo "<?php \$dbserver='${EC2DB.PrivateIp}'; \$u='${DBUser}'; \$p='${DBPass}'; \$database='OctankDB'; ?>" > db.php
            sudo mv db.php /var/www/html/

            # Clone repository
            git clone https://github.com/madiasOnGit/abiii.git
            sudo mv abiii/onPremApp/app/* /var/www/html/
            sudo mv abiii/onPremApp/css/ /var/www/html/
            sudo mv abiii/onPremApp/image/ /var/www/html/

            # Start apache
            sudo service httpd start
            chkconfig httpd on
      Tags:
        - Key: Name
          Value: AppInstance1
  EC2App2:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-014ce76919b528bff
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet
      KeyName: devKeyIreland
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            # Install dependecies
            sudo yum update -y
            sudo yum install php php-mysql git -y

            echo "<?php \$dbserver='${EC2DB.PrivateIp}'; \$u='${DBUser}'; \$p='${DBPass}'; \$database='OctankDB'; ?>" > db.php
            sudo mv db.php /var/www/html/

            # Clone repository
            git clone https://github.com/madiasOnGit/abiii.git
            sudo mv abiii/onPremApp/app/* /var/www/html/
            sudo mv abiii/onPremApp/css/ /var/www/html/
            sudo mv abiii/onPremApp/image/ /var/www/html/

            # Start apache
            sudo service httpd start
            chkconfig httpd on
      Tags:
        - Key: Name
          Value: AppInstance2
  TALB:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - EC2App1
      - EC2App2
    Properties:
      Name: tg-app
      VpcId: !Ref onPremVPC
      TargetType: instance
      Port: 80
      Protocol: HTTP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 2
      HealthCheckIntervalSeconds: 5
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 10
      Targets:
        - Id: !Ref EC2App1
        - Id: !Ref EC2App2
  ALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    DependsOn:
      - TALB
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Name: alb-app
      SecurityGroups:
        - !Ref SecurityGroupHTTPALB
  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TALB
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP


## Outputs ##
Outputs:
  VPCID:
    Description: onPremVPC ID
    Value: !Ref "onPremVPC"
    Export:
      Name: AppVPCID
  ALBDNS:
    Description: URL to access the application
    Value: !GetAtt ALB.DNSName
    Export:
      Name: ALBAppURL